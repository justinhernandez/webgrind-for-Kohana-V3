<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Webgrind helper class
 *
 * @package			Webgrind
 * @author			Justin Hernandez <justin@transphorm.com>
 * @copyright		2009
 */
class webgrind
{

	/**
	 * returns image path string
	 *
	 * @return  string
	 */
	public static function img($file)
	{
		return WEBGRIND.'media/img/'.$file;
	}
	
	public static function url()
	{
		return url::site().'webgrind/';
	}
	
	
	/* FROM WEBGRIND config.php */
	
	
	static $webgrindVersion = '1.0';
    
	/**
	* Regex that matches the trace files generated by xdebug
	*/
    public static function xdebugOutputFormat() {
        $outputName = ini_get('xdebug.profiler_output_name');
		if($outputName=='') // Ini value not defined
			$outputName = '/^cachegrind\.out\..+$/';
		else
	    	$outputName = '/^'.preg_replace('/(%[^%])+/', '.+', $outputName).'$/';
	    return $outputName;
    }
	
	/**
	* Directory to search for trace files
	*/
	public static function xdebugOutputDir() {
		$dir = ini_get('xdebug.profiler_output_dir');
		if($dir=='') // Ini value not defined
			return realpath(Kohana::config('webgrind.profilerDir')).'/';
	    return realpath($dir).'/';
	}
	
	/**
	* Writable dir for information storage
	*/
	public static function storageDir() {
		$storage = Kohana::config('webgrind.storageDir');
	    if (!empty($storage))
	        return realpath($storage).'/';
	        
	    if (!function_exists('sys_get_temp_dir') || !is_writable(sys_get_temp_dir())) {
	        # use xdebug setting
            return webgrind::xdebugOutputDir();
	    }
	    return realpath(sys_get_temp_dir()).'/';
	}
	
	
	/* MISC WEBGRIND FUNCTIONS */
	
	
	public static function cost_cmp($a, $b){
		$a = $a['summedSelfCost'];
		$b = $b['summedSelfCost'];

		if ($a == $b) {
			return 0;
		}
		return ($a > $b) ? -1 : 1;
	}
	
	public static function get($param, $default=false)
	{
		return (isset($_GET[$param])? $_GET[$param] : $default);
	}

}
